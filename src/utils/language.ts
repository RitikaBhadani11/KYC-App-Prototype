export interface LanguageContent {
  [key: string]: string | LanguageContent;
}

export const translations: Record<string, LanguageContent> = {
  hi: {
    // Common
    back: 'рд╡рд╛рдкрд╕',
    continue: 'рдЖрдЧреЗ рдмрдврд╝реЗрдВ',
    submit: 'рдЬрдорд╛ рдХрд░реЗрдВ',
    retry: 'рджреЛрдмрд╛рд░рд╛',
    yes: 'рд╣рд╛рдБ',
    no: 'рдирд╣реАрдВ',
    close: 'рдмрдВрдж рдХрд░реЗрдВ',
    voice: 'рдЖрд╡рд╛рдЬрд╝',
    
    // Splash Page
    appName: 'рд╕реБрд░рдХреНрд╖рд┐рдд рдкрд╣рдЪрд╛рди',
    appSubtitle: 'рдЖрдкрдХреА рд╕реБрд░рдХреНрд╖рд┐рдд рдФрд░ рдЖрд╕рд╛рди KYC',
    start: 'рд╢реБрд░реВ рдХрд░реЗрдВ',
    safe: 'рд╕реБрд░рдХреНрд╖рд┐рдд',
    trusted: 'рднрд░реЛрд╕реЗрдордВрдж',
    easy: 'рдЖрд╕рд╛рди',
    trustedByMillions: 'рд▓рд╛рдЦреЛрдВ рд▓реЛрдЧреЛрдВ рдХрд╛ рднрд░реЛрд╕рд╛',
    
    // Language Selection
    selectLanguageTitle: 'рдЕрдкрдирд╛ рд░рд╛рдЬреНрдп рдФрд░ рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ',
    state: 'рд░рд╛рдЬреНрдп',
    language: 'рднрд╛рд╖рд╛',
    selectState: 'рдЕрдкрдирд╛ рд░рд╛рдЬреНрдп рдЪреБрдиреЗрдВ',
    yourInfoSafe: 'рдЖрдкрдХреА рдЬрд╛рдирдХрд╛рд░реА рд╕реБрд░рдХреНрд╖рд┐рдд рд░рд╣реЗрдЧреА',
    
    // Login Page
    enterMobile: 'рдЕрдкрдирд╛ рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░ рдбрд╛рд▓реЗрдВ',
    mobileNumber: 'рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░',
    yourNumberSafe: 'рдЖрдкрдХрд╛ рдирдВрдмрд░ рд╕реБрд░рдХреНрд╖рд┐рдд рд╣реИ',
    dataEncrypted: 'рд╣рдо рдЖрдкрдХреА рдЬрд╛рдирдХрд╛рд░реА рдХреЛ рдПрдиреНрдХреНрд░рд┐рдкреНрдЯреЗрдб рд░рдЦрддреЗ рд╣реИрдВ рдФрд░ рдХрд┐рд╕реА рдХреЗ рд╕рд╛рде рд╕рд╛рдЭрд╛ рдирд╣реАрдВ рдХрд░рддреЗ',
    sendOtp: 'OTP рднреЗрдЬреЗрдВ',
    otpVerification: 'OTP рд╕рддреНрдпрд╛рдкрди',
    enterOtp: '6 рдЕрдВрдХреЛрдВ рдХрд╛ OTP рдбрд╛рд▓реЗрдВ',
    otpSentTo: 'OTP рднреЗрдЬрд╛ рдЧрдпрд╛',
    verifying: 'рд╕рддреНрдпрд╛рдкрди рд╣реЛ рд░рд╣рд╛ рд╣реИ...',
    resendOtp: 'OTP рджреЛрдмрд╛рд░рд╛ рднреЗрдЬреЗрдВ',
    verify: 'рд╕рддреНрдпрд╛рдкрд┐рдд рдХрд░реЗрдВ',
    secureAndTrusted: 'рд╕реБрд░рдХреНрд╖рд┐рдд рдФрд░ рднрд░реЛрд╕реЗрдордВрдж',
    
    // KYC Method Selection
    chooseDocument: 'KYC рдбреЙрдХреНрдпреВрдореЗрдВрдЯ рдЪреБрдиреЗрдВ',
    aiSuggestion: 'AI рд╕реБрдЭрд╛рд╡',
    bestOptionFor: 'рдЖрдкрдХреЗ рд▓рд┐рдП рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рд╡рд┐рдХрд▓реНрдк рд╣реИ',
    recommendation: 'рд╕реБрдЭрд╛рд╡',
    aadhaar: 'рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб',
    pan: 'рдкреИрди рдХрд╛рд░реНрдб',
    driving: 'рдбреНрд░рд╛рдЗрд╡рд┐рдВрдЧ рд▓рд╛рдЗрд╕реЗрдВрд╕',
    voter: 'рдорддрджрд╛рддрд╛ рдкрд╣рдЪрд╛рди рдкрддреНрд░',
    easiestFastest: 'рд╕рдмрд╕реЗ рдЖрд╕рд╛рди рдФрд░ рддреЗрдЬрд╝',
    betterForBusiness: 'рдмрд┐рдЬрдиреЗрд╕ рдХреЗ рд▓рд┐рдП рдмреЗрд╣рддрд░',
    forDrivers: 'рдбреНрд░рд╛рдЗрд╡рд░реЛрдВ рдХреЗ рд▓рд┐рдП',
    forVoters: 'рд╡реЛрдЯрд░реНрд╕ рдХреЗ рд▓рд┐рдП',
    endorsement: 'рдореИрдВ рдЗрд╕ рдРрдк рдХреЛ рд╕реБрд░рдХреНрд╖рд┐рдд KYC рдХреЗ рд▓рд┐рдП рдЙрдкрдпреЛрдЧ рдХрд░рддрд╛ рд╣реВрдВ!',
    communityLeader: 'рдЖрдкрдХреЗ рд╕рдореБрджрд╛рдп рдХреЗ рдиреЗрддрд╛',
    
    // Document Scanner
    scanDocument: 'рд╕реНрдХреИрди рдХрд░реЗрдВ',
    scanInstructions: 'рд╕реНрдХреИрди рдХрд░рдиреЗ рдХреЗ рдирд┐рд░реНрджреЗрд╢:',
    instruction1: 'тАв рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдХреЛ рд╕рдорддрд▓ рд╕рддрд╣ рдкрд░ рд░рдЦреЗрдВ',
    instruction2: 'тАв рдЕрдЪреНрдЫреА рд░реЛрд╢рдиреА рдореЗрдВ рддрд╕реНрд╡реАрд░ рд▓реЗрдВ',
    instruction3: 'тАв рдкреВрд░рд╛ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдлреНрд░реЗрдо рдореЗрдВ рдЖрдирд╛ рдЪрд╛рд╣рд┐рдП',
    instruction4: 'тАв рд╕рд╛рдлрд╝ рдФрд░ рд╕реНрдкрд╖реНрдЯ рддрд╕реНрд╡реАрд░ рд▓реЗрдВ',
    takePhoto: 'рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдХреА рддрд╕реНрд╡реАрд░ рд▓реЗрдВ',
    capture: 'рдХреИрдкреНрдЪрд░ рдХрд░реЗрдВ',
    scanning: 'AI рд╕реНрдХреИрди рд╣реЛ рд░рд╣рд╛ рд╣реИ...',
    excellent: 'рдмрд╣реБрдд рдЕрдЪреНрдЫрд╛! рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рд╕рд╛рдлрд╝ рд╣реИ',
    blurry: 'рддрд╕реНрд╡реАрд░ рдзреБрдВрдзрд▓реА рд╣реИ, рджреЛрдмрд╛рд░рд╛ рд▓реЗрдВ',
    incomplete: 'рдкреВрд░рд╛ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рджрд┐рдЦрд╛рдИ рдирд╣реАрдВ рджреЗ рд░рд╣рд╛',
    retake: 'рджреЛрдмрд╛рд░рд╛ рд▓реЗрдВ',
    confirm: 'рдХрдиреНрдлрд░реНрдо рдХрд░реЗрдВ',
    offlineMode: 'рдСрдлрд▓рд╛рдЗрди рдореЛрдб',
    online: 'рдСрдирд▓рд╛рдЗрди',
    savingOffline: 'рдСрдлрд▓рд╛рдЗрди рдореЛрдб рдореЗрдВ рд╕реЗрд╡ рд╣реЛ рд░рд╣рд╛ рд╣реИ',
    willUpdateOnline: 'рдЗрдВрдЯрд░рдиреЗрдЯ рдЖрдиреЗ рдкрд░ рдЕрдкрдбреЗрдЯ рд╣реЛ рдЬрд╛рдПрдЧрд╛',
    
    // Face Verification
    faceVerification: 'рдЪреЗрд╣рд░рд╛ рд╕рддреНрдпрд╛рдкрди',
    faceInstructions: 'рдирд┐рд░реНрджреЗрд╢:',
    faceInstruction1: 'тАв рдЕрдкрдиреЗ рдЪреЗрд╣рд░реЗ рдХреЛ рдлреНрд░реЗрдо рдореЗрдВ рд░рдЦреЗрдВ',
    faceInstruction2: 'тАв рдЕрдЪреНрдЫреА рд░реЛрд╢рдиреА рдореЗрдВ рдмреИрдареЗрдВ',
    faceInstruction3: 'тАв рдирд┐рд░реНрджреЗрд╢реЛрдВ рдХрд╛ рдкрд╛рд▓рди рдХрд░реЗрдВ',
    faceInstruction4: 'тАв рд╕реНрдерд┐рд░ рд░рд╣реЗрдВ рдЬрдм рддрдХ рдХрд┐ рдХрд╣рд╛ рди рдЬрд╛рдП',
    positionFace: 'рдЕрдкрдирд╛ рдЪреЗрд╣рд░рд╛ рдлреНрд░реЗрдо рдореЗрдВ рд▓рд╛рдПрдВ',
    startVerification: 'рд╕рддреНрдпрд╛рдкрди рд╢реБрд░реВ рдХрд░реЗрдВ',
    lookStraight: 'рд╕реАрдзреЗ рдХреИрдорд░реЗ рдореЗрдВ рджреЗрдЦреЗрдВ',
    turnLeft: 'рдмрд╛рдПрдВ рддрд░рдл рдореБрдбрд╝реЗрдВ',
    turnRight: 'рджрд╛рдПрдВ рддрд░рдл рдореБрдбрд╝реЗрдВ',
    smile: 'рдореБрд╕реНрдХреБрд░рд╛рдПрдВ',
    complete: 'рдкреВрд░реНрдг!',
    progress: 'рдкреНрд░рдЧрддрд┐',
    step: 'рдЪрд░рдг',
    verificationSuccess: 'рд╕рддреНрдпрд╛рдкрди рд╕рдлрд▓!',
    faceVerified: 'рдЖрдкрдХрд╛ рдЪреЗрд╣рд░рд╛ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд╕рддреНрдпрд╛рдкрд┐рдд рд╣реЛ рдЧрдпрд╛ рд╣реИ',
    dataEncryptedSecure: 'рдЖрдкрдХрд╛ рдбреЗрдЯрд╛ рдПрдиреНрдХреНрд░рд┐рдкреНрдЯреЗрдб рдФрд░ рд╕реБрд░рдХреНрд╖рд┐рдд рд╣реИ',
    
    // Upload Queue
    uploading: 'рдЕрдкрд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ',
    uploadingDocuments: 'рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдЕрдкрд▓реЛрдб рд╣реЛ рд░рд╣реЗ рд╣реИрдВ',
    totalProgress: 'рдХреБрд▓ рдкреНрд░рдЧрддрд┐',
    faceVerificationDoc: 'рдЪреЗрд╣рд░рд╛ рд╕рддреНрдпрд╛рдкрди',
    uploadComplete: 'рдЕрдкрд▓реЛрдб рдкреВрд░реНрдг',
    uploadingDoc: 'рдЕрдкрд▓реЛрдб рд╣реЛ рд░рд╣рд╛...',
    uploadFailed: 'рдЕрдкрд▓реЛрдб рдЕрд╕рдлрд▓',
    pending: 'рдХрддрд╛рд░ рдореЗрдВ',
    offlineQueue: 'рдСрдлрд▓рд╛рдЗрди - рдХрддрд╛рд░ рдореЗрдВ рд╣реИ',
    youAreSafe: 'рдЖрдк рд╕реБрд░рдХреНрд╖рд┐рдд рд╣реИрдВ! рдЕрдкрд▓реЛрдб рдХрддрд╛рд░ рдореЗрдВ рд╣реИ',
    willResumeAuto: 'рдЗрдВрдЯрд░рдиреЗрдЯ рдХрдиреЗрдХреНрд╢рди рдЖрдиреЗ рдкрд░ рдЕрдкрдиреЗ рдЖрдк рд░рд┐рдЬреНрдпреВрдо рд╣реЛ рдЬрд╛рдПрдЧрд╛',
    allUploaded: 'рд╕рднреА рдлрд╛рдЗрд▓реЗрдВ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЕрдкрд▓реЛрдб рд╣реЛ рдЧрдИрдВ!',
    dataStoredSecure: 'рдЖрдкрдХрд╛ рдбреЗрдЯрд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рд░реВрдк рд╕реЗ рд╕рдВрдЧреНрд░рд╣реАрдд рд╣реЛ рдЧрдпрд╛ рд╣реИ',
    proceedReview: 'рд╕рдореАрдХреНрд╖рд╛ рдХреЗ рд▓рд┐рдП рдЖрдЧреЗ рдмрдврд╝реЗрдВ',
    retryUpload: 'рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВ',
    uploadTips: 'рдЯрд┐рдк: рдмреЗрд╣рддрд░ рдЕрдкрд▓реЛрдб рдХреЗ рд▓рд┐рдП',
    strongSignal: 'рдордЬрдмреВрдд рд╕рд┐рдЧреНрдирд▓',
    bePatient: 'рдзреИрд░реНрдп рд░рдЦреЗрдВ',
    
    // Review & Confirm
    reviewConfirm: 'рд╕рдореАрдХреНрд╖рд╛ рдФрд░ рдкреБрд╖реНрдЯрд┐',
    personalInfo: 'рд╡реНрдпрдХреНрддрд┐рдЧрдд рдЬрд╛рдирдХрд╛рд░реА:',
    verified: 'рд╕рддреНрдпрд╛рдкрд┐рдд',
    edit: 'рд╕рдВрдкрд╛рджрд┐рдд',
    documentPreview: 'рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдкреВрд░реНрд╡рд╛рд╡рд▓реЛрдХрди',
    agreeTerms: 'рдореИрдВ рдирд┐рдпрдо рдФрд░ рд╢рд░реНрддреЛрдВ рд╕реЗ рд╕рд╣рдордд рд╣реВрдВ',
    agreePrivacy: 'рдореИрдВ рдЧреЛрдкрдиреАрдпрддрд╛ рдиреАрддрд┐ рд╕реЗ рд╕рд╣рдордд рд╣реВрдВ',
    allDataEncrypted: 'рд╕рднреА рдбреЗрдЯрд╛ рдПрдиреНрдХреНрд░рд┐рдкреНрдЯреЗрдб рдФрд░ рд╕реБрд░рдХреНрд╖рд┐рдд рд╣реИ',
    dataOnlyForKyc: 'рдЖрдкрдХреА рд╡реНрдпрдХреНрддрд┐рдЧрдд рдЬрд╛рдирдХрд╛рд░реА рдХреЗрд╡рд▓ KYC рд╕рддреНрдпрд╛рдкрди рдХреЗ рд▓рд┐рдП рдЙрдкрдпреЛрдЧ рдХреА рдЬрд╛рдПрдЧреА',
    submitting: 'рдЬрдорд╛ рд╣реЛ рд░рд╣рд╛ рд╣реИ...',
    submitKyc: 'KYC рдЬрдорд╛ рдХрд░реЗрдВ',
    reviewCarefully: 'рд╕рд╛рд╡рдзрд╛рдиреА рд╕реЗ рдЬрд╛рдВрдЪ рдХрд░реЗрдВ рдФрд░ рдлрд┐рд░ рдЬрдорд╛ рдХрд░реЗрдВ!',
    
    // Success Page
    congratulations: 'рдмрдзрд╛рдИ рд╣реЛ! ЁЯОЙ',
    kycComplete: 'рдЖрдкрдХрд╛ KYC рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкреВрд░реНрдг рд╣реЛ рдЧрдпрд╛!',
    kycVerificationComplete: 'Your KYC verification is complete',
    kycId: 'KYC рдкрд╣рдЪрд╛рди рд╕рдВрдЦреНрдпрд╛:',
    keepSafe: 'рдЗрд╕реЗ рд╕реБрд░рдХреНрд╖рд┐рдд рд░рдЦреЗрдВ',
    downloadReceipt: 'рд░рд╕реАрдж рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ',
    shareStatus: 'рд╕реНрдЯреЗрдЯрд╕ рд╢реЗрдпрд░ рдХрд░реЗрдВ',
    nowYouCan: 'рдЕрдм рдЖрдк рдЗрди рд╕реЗрд╡рд╛рдУрдВ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ:',
    openBankAccount: 'рдмреИрдВрдХ рдЦрд╛рддрд╛ рдЦреЛрд▓реЗрдВ',
    governmentServices: 'рд╕рд░рдХрд╛рд░реА рд╕реЗрд╡рд╛рдПрдВ',
    digitalPayments: 'рдбрд┐рдЬрд┐рдЯрд▓ рдкреЗрдореЗрдВрдЯ',
    thankYou: 'рдзрдиреНрдпрд╡рд╛рдж! ЁЯЩП',
    trustingSurakshit: 'рд╕реБрд░рдХреНрд╖рд┐рдд рдкрд╣рдЪрд╛рди рдкрд░ рднрд░реЛрд╕рд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП',
    goHome: 'рд╣реЛрдо рдкрд░ рдЬрд╛рдПрдВ',
    
    // Feedback Page
    feedback: 'рдлреАрдбрдмреИрдХ',
    howWasExperience: 'рдЖрдкрдХрд╛ рдЕрдиреБрднрд╡ рдХреИрд╕рд╛ рд░рд╣рд╛?',
    rateExperience: 'рдЕрдкрдирд╛ рдЕрдиреБрднрд╡ рд░реЗрдЯ рдХрд░реЗрдВ',
    excellent: 'рдЙрддреНрдХреГрд╖реНрдЯ',
    good: 'рдЕрдЪреНрдЫрд╛',
    average: 'рдареАрдХ-рдард╛рдХ',
    poor: 'рдЦрд░рд╛рдм',
    terrible: 'рдмрд╣реБрдд рдЦрд░рд╛рдм',
    whatCanImprove: 'рд╣рдо рдХреНрдпрд╛ рд╕реБрдзрд╛рд░ рд╕рдХрддреЗ рд╣реИрдВ?',
    easyToUse: 'рдЙрдкрдпреЛрдЧ рдореЗрдВ рдЖрд╕рд╛рди',
    fastProcess: 'рддреЗрдЬрд╝ рдкреНрд░рдХреНрд░рд┐рдпрд╛',
    clearInstructions: 'рд╕реНрдкрд╖реНрдЯ рдирд┐рд░реНрджреЗрд╢',
    betterDesign: 'рдмреЗрд╣рддрд░ рдбрд┐рдЬрд╝рд╛рдЗрди',
    moreLanguages: 'рдЕрдзрд┐рдХ рднрд╛рд╖рд╛рдПрдВ',
    betterSupport: 'рдмреЗрд╣рддрд░ рд╕рд╣рд╛рдпрддрд╛',
    submitFeedback: 'рдлреАрдбрдмреИрдХ рднреЗрдЬреЗрдВ',
    thankYouFeedback: 'рдЖрдкрдХреЗ рдлреАрдбрдмреИрдХ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж!',
    helpUsImprove: 'рдЖрдкрдХреА рд░рд╛рдп рд╣рдорд╛рд░реЗ рд▓рд┐рдП рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╣реИ',
    feedbackPersonality: 'рдЖрдкрдХрд╛ рдлреАрдбрдмреИрдХ рд╣рдореЗрдВ рдмреЗрд╣рддрд░ рдмрдирд╛рдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИред рд╣рдореЗрдВ рдмрддрд╛рдПрдВ рдХрд┐ рд╣рдо рдХреИрд╕реЗ рд╕реБрдзрд╛рд░ рд╕рдХрддреЗ рд╣реИрдВ!',
  },
  en: {
    // Common
    back: 'Back',
    continue: 'Continue',
    submit: 'Submit',
    retry: 'Retry',
    yes: 'Yes',
    no: 'No',
    close: 'Close',
    voice: 'Voice',
    
    // Splash Page
    appName: 'Surakshit Pehchaan',
    appSubtitle: 'Your Safe & Easy KYC',
    start: 'Start',
    safe: 'Safe',
    trusted: 'Trusted',
    easy: 'Easy',
    trustedByMillions: 'Trusted by millions',
    
    // Language Selection
    selectLanguageTitle: 'Select Your State & Language',
    state: 'State',
    language: 'Language',
    selectState: 'Select your state',
    yourInfoSafe: 'Your information will be secure',
    
    // Login Page
    enterMobile: 'Enter Your Mobile Number',
    mobileNumber: 'Mobile Number',
    yourNumberSafe: 'Your number is safe',
    dataEncrypted: 'We keep your information encrypted and do not share with anyone',
    sendOtp: 'Send OTP',
    otpVerification: 'OTP Verification',
    enterOtp: 'Enter 6-digit OTP',
    otpSentTo: 'OTP sent to',
    verifying: 'Verifying...',
    resendOtp: 'Resend OTP',
    verify: 'Verify',
    secureAndTrusted: 'Secure & Trusted',
    
    // And so on... I'll continue with other translations as needed
  }
};

export const getTranslation = (key: string, language: string = 'hi'): string => {
  const keys = key.split('.');
  let value: any = translations[language];
  
  for (const k of keys) {
    if (value && typeof value === 'object' && k in value) {
      value = value[k];
    } else {
      // Fallback to Hindi if key not found in selected language
      value = translations['hi'];
      for (const fallbackKey of keys) {
        if (value && typeof value === 'object' && fallbackKey in value) {
          value = value[fallbackKey];
        } else {
          return key; // Return key if not found
        }
      }
      break;
    }
  }
  
  return typeof value === 'string' ? value : key;
};

export const t = (key: string, language?: string) => getTranslation(key, language);